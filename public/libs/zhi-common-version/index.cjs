"use strict";Object.defineProperty(exports,Symbol.toStringTag,{value:"Module"});const l=/^[v^~<>=]*?(\d+)(?:\.([x*]|\d+)(?:\.([x*]|\d+)(?:\.([x*]|\d+))?(?:-([\da-z\-]+(?:\.[\da-z\-]+)*))?(?:\+[\da-z\-]+(?:\.[\da-z\-]+)*)?)?)?$/i,a=r=>{if(typeof r!="string")throw new TypeError("Invalid argument expected string");const t=r.match(l);if(!t)throw new Error(`Invalid argument not valid semver ('${r}' received)`);return t.shift(),t},p=r=>r==="*"||r==="x"||r==="X",u=r=>{const t=parseInt(r,10);return isNaN(t)?r:t},f=(r,t)=>typeof r!=typeof t?[String(r),String(t)]:[r,t],g=(r,t)=>{if(p(r)||p(t))return 0;const[e,n]=f(u(r),u(t));return e>n?1:e<n?-1:0},d=(r,t)=>{for(let e=0;e<Math.max(r.length,t.length);e++){const n=g(r[e]||"0",t[e]||"0");if(n!==0)return n}return 0},i=(r,t)=>{const e=a(r),n=a(t),s=e.pop(),o=n.pop(),c=d(e,n);return c!==0?c:s&&o?d(s.split("."),o.split(".")):s||o?s?-1:1:0};class m{static greater(t,e){return i(t,e)>0}static equal(t,e){return i(t,e)===0}static lesser(t,e){return i(t,e)<0}}exports.VersionUtil=m;
